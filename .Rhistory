# Load LakeEnsemblR
library(LakeEnsemblR)
# Load libraries for post-processing
library(lubridate)
library(gotmtools)
library(ggplot2)
library(ggpubr)
bathy <- read.csv('1_null/LakeEnsemblR_bathymetry_standard.csv')
colnames(bathy) <- c("depths", "areas")
ncdf_null <- '1_null/output/ensemble_output.nc'
out_null <- load_var(ncdf = ncdf_null, var = "temp")
ts.sch <- lapply(out_null, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_null <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_null)[4] <- "model"
ncdf_10 <- '5_constantsalt+10/output/ensemble_output.nc'
out_10 <- load_var(ncdf = ncdf_10, var = "temp")
ts.sch <- lapply(out_10, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_10 <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_10)[4] <- "model"
df = data.frame('time' = df_null$datetime, 'doy' = yday(df_null$datetime), 'year' = year(df_null$datetime), 'month' = month(df_null$datetime),
'GLM_null' = subset(df_null, model == 'GLM')$value, 'GLM_HighPSU' = subset(df_10, model == 'GLM')$value,
'GOTM_null' = subset(df_null, model == 'GOTM')$value, 'GOTM_HighPSU' = subset(df_10, model == 'GOTM')$value,
'Simstrat_null' = subset(df_null, model == 'Simstrat')$value, 'Simstrat_HighPSU' = subset(df_10, model == 'Simstrat')$value)
## plot results
g <- ggplot(df) +
geom_line(aes(doy, GLM_null, colour = 'null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GLM') +
theme_light(); g
ggsave('output/GLM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, GOTM_null, colour = 'null')) +
geom_line(aes(doy, GOTM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GOTM') +
theme_light(); g
ggsave('output/GOTM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, Simstrat_null, colour = 'null')) +
geom_line(aes(doy, Simstrat_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('Simstrat') +
theme_light(); g
ggsave('output/Simstrat_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
density_null <- load_var(ncdf = ncdf_null, var = "density")
density_null <- load_var(ncdf = ncdf_null, var = "dens")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Load LakeEnsemblR
library(LakeEnsemblR)
# Load libraries for post-processing
library(lubridate)
library(gotmtools)
library(ggplot2)
library(ggpubr)
bathy <- read.csv('1_null/LakeEnsemblR_bathymetry_standard.csv')
colnames(bathy) <- c("depths", "areas")
ncdf_null <- '1_null/output/ensemble_output.nc'
out_null <- load_var(ncdf = ncdf_null, var = "temp")
density_null <- load_var(ncdf = ncdf_null, var = "dens")
head(density_null)
str(density_null)
density_null$GLM$wtr_20
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Load LakeEnsemblR
library(LakeEnsemblR)
# Load libraries for post-processing
library(lubridate)
library(gotmtools)
library(ggplot2)
library(ggpubr)
bathy <- read.csv('1_null/LakeEnsemblR_bathymetry_standard.csv')
colnames(bathy) <- c("depths", "areas")
ncdf_null <- '1_null/output/ensemble_output.nc'
out_null <- load_var(ncdf = ncdf_null, var = "temp")
density_null <- load_var(ncdf = ncdf_null, var = "dens")
ts.sch <- lapply(out_null, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_null <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_null)[4] <- "model"
ncdf_10 <- '5_constantsalt+10/output/ensemble_output.nc'
out_10 <- load_var(ncdf = ncdf_10, var = "temp")
dens_10 <- load_var(ncdf = ncdf_null, var = "dens")
ts.sch <- lapply(out_10, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_10 <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_10)[4] <- "model"
df = data.frame('time' = df_null$datetime, 'doy' = yday(df_null$datetime), 'year' = year(df_null$datetime), 'month' = month(df_null$datetime),
'GLM_null' = subset(df_null, model == 'GLM')$value, 'GLM_HighPSU' = subset(df_10, model == 'GLM')$value,
'GOTM_null' = subset(df_null, model == 'GOTM')$value, 'GOTM_HighPSU' = subset(df_10, model == 'GOTM')$value,
'Simstrat_null' = subset(df_null, model == 'Simstrat')$value, 'Simstrat_HighPSU' = subset(df_10, model == 'Simstrat')$value)
## plot results
g <- ggplot(df) +
geom_line(aes(doy, GLM_null, colour = 'null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GLM') +
theme_light(); g
ggsave('output/GLM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, GOTM_null, colour = 'null')) +
geom_line(aes(doy, GOTM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GOTM') +
theme_light(); g
ggsave('output/GOTM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, Simstrat_null, colour = 'null')) +
geom_line(aes(doy, Simstrat_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('Simstrat') +
theme_light(); g
ggsave('output/Simstrat_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
df_dens = data.frame('time' = density_null$GLM$datetime, 'doy' = yday(density_null$GLM$datetime), 'year' = year(density_null$GLM$datetime), 'month' = month(density_null$GLM$datetime),
'GLM_null' = density_null$GLM$wtr_20 - density_null$GLM$wtr_2, 'GLM_HighPSU' = density_10$GLM$wtr_20 - density_10$GLM$wtr_2,
'GOTM_null' = density_null$GOTM$wtr_20 - density_null$GOTM$wtr_2, 'GOTM_HighPSU' = density_10$GOTM$wtr_20 - density_10$GOTM$wtr_2,
'Simstrat_null' = density_null$Simstrat$wtr_20 - density_null$Simstrat$wtr_2, 'Simstrat_HighPSU' = density_10$Simstrat$wtr_20 - density_10$Simstrat$wtr_2)
bathy <- read.csv('1_null/LakeEnsemblR_bathymetry_standard.csv')
colnames(bathy) <- c("depths", "areas")
ncdf_null <- '1_null/output/ensemble_output.nc'
out_null <- load_var(ncdf = ncdf_null, var = "temp")
density_null <- load_var(ncdf = ncdf_null, var = "dens")
ts.sch <- lapply(out_null, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_null <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_null)[4] <- "model"
ncdf_10 <- '5_constantsalt+10/output/ensemble_output.nc'
out_10 <- load_var(ncdf = ncdf_10, var = "temp")
density_10 <- load_var(ncdf = ncdf_null, var = "dens")
ts.sch <- lapply(out_10, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_10 <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_10)[4] <- "model"
df = data.frame('time' = df_null$datetime, 'doy' = yday(df_null$datetime), 'year' = year(df_null$datetime), 'month' = month(df_null$datetime),
'GLM_null' = subset(df_null, model == 'GLM')$value, 'GLM_HighPSU' = subset(df_10, model == 'GLM')$value,
'GOTM_null' = subset(df_null, model == 'GOTM')$value, 'GOTM_HighPSU' = subset(df_10, model == 'GOTM')$value,
'Simstrat_null' = subset(df_null, model == 'Simstrat')$value, 'Simstrat_HighPSU' = subset(df_10, model == 'Simstrat')$value)
## plot results
g <- ggplot(df) +
geom_line(aes(doy, GLM_null, colour = 'null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GLM') +
theme_light(); g
ggsave('output/GLM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, GOTM_null, colour = 'null')) +
geom_line(aes(doy, GOTM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GOTM') +
theme_light(); g
ggsave('output/GOTM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, Simstrat_null, colour = 'null')) +
geom_line(aes(doy, Simstrat_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('Simstrat') +
theme_light(); g
ggsave('output/Simstrat_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
df_dens = data.frame('time' = density_null$GLM$datetime, 'doy' = yday(density_null$GLM$datetime), 'year' = year(density_null$GLM$datetime), 'month' = month(density_null$GLM$datetime),
'GLM_null' = density_null$GLM$wtr_20 - density_null$GLM$wtr_2, 'GLM_HighPSU' = density_10$GLM$wtr_20 - density_10$GLM$wtr_2,
'GOTM_null' = density_null$GOTM$wtr_20 - density_null$GOTM$wtr_2, 'GOTM_HighPSU' = density_10$GOTM$wtr_20 - density_10$GOTM$wtr_2,
'Simstrat_null' = density_null$Simstrat$wtr_20 - density_null$Simstrat$wtr_2, 'Simstrat_HighPSU' = density_10$Simstrat$wtr_20 - density_10$Simstrat$wtr_2)
g <- ggplot(df_dens) +
geom_line(aes(doy, GLM_null, colour = 'GLM', linetype = 'Null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'GLM', linetype = 'HighPSU') ) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('Simstrat') +
theme_light(); g
g <- ggplot(df_dens) +
geom_line(aes(doy, GLM_null, colour = 'GLM', linetype = 'Null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'GLM', linetype = 'HighPSU') ) +
geom_line(aes(doy, GOTM_null, colour = 'GOTM', linetype = 'Null')) +
geom_line(aes(doy, GOTM_HighPSU, colour = 'GOTM', linetype = 'HighPSU') ) +
geom_line(aes(doy, Simstrat_null, colour = 'Simstrat', linetype = 'Null')) +
geom_line(aes(doy, Simstrat_HighPSU, colour = 'Simstrat', linetype = 'HighPSU') ) +
labs(y = "Density difference 20-2 m (kg/m3)") +
facet_wrap(~ year) +
ylim(-1,1)+
theme_light(); g
ggplot(df_dens) +
geom_line(aes(doy, GLM_null, colour = 'GLM', linetype = 'Null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'GLM', linetype = 'HighPSU') )
ggplot(df_dens) +
geom_line(aes(doy, GLM_null, colour = 'GLM', linetype = 'Null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'GLM', linetype = 'HighPSU') ) +
facet_wrap(~ year)
ncdf_10 <- '5_constantsalt+10/output/ensemble_output.nc'
out_10 <- load_var(ncdf = ncdf_10, var = "temp")
density_10 <- load_var(ncdf = ncdf_10, var = "dens")
ts.sch <- lapply(out_10, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_10 <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_10)[4] <- "model"
df = data.frame('time' = df_null$datetime, 'doy' = yday(df_null$datetime), 'year' = year(df_null$datetime), 'month' = month(df_null$datetime),
'GLM_null' = subset(df_null, model == 'GLM')$value, 'GLM_HighPSU' = subset(df_10, model == 'GLM')$value,
'GOTM_null' = subset(df_null, model == 'GOTM')$value, 'GOTM_HighPSU' = subset(df_10, model == 'GOTM')$value,
'Simstrat_null' = subset(df_null, model == 'Simstrat')$value, 'Simstrat_HighPSU' = subset(df_10, model == 'Simstrat')$value)
## plot results
g <- ggplot(df) +
geom_line(aes(doy, GLM_null, colour = 'null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GLM') +
theme_light(); g
ggsave('output/GLM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, GOTM_null, colour = 'null')) +
geom_line(aes(doy, GOTM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GOTM') +
theme_light(); g
ggsave('output/GOTM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, Simstrat_null, colour = 'null')) +
geom_line(aes(doy, Simstrat_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('Simstrat') +
theme_light(); g
ggsave('output/Simstrat_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
df_dens = data.frame('time' = density_null$GLM$datetime, 'doy' = yday(density_null$GLM$datetime), 'year' = year(density_null$GLM$datetime), 'month' = month(density_null$GLM$datetime),
'GLM_null' = density_null$GLM$wtr_20 - density_null$GLM$wtr_2, 'GLM_HighPSU' = density_10$GLM$wtr_20 - density_10$GLM$wtr_2,
'GOTM_null' = density_null$GOTM$wtr_20 - density_null$GOTM$wtr_2, 'GOTM_HighPSU' = density_10$GOTM$wtr_20 - density_10$GOTM$wtr_2,
'Simstrat_null' = density_null$Simstrat$wtr_20 - density_null$Simstrat$wtr_2, 'Simstrat_HighPSU' = density_10$Simstrat$wtr_20 - density_10$Simstrat$wtr_2)
g <- ggplot(df_dens) +
geom_line(aes(doy, GLM_null, colour = 'GLM', linetype = 'Null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'GLM', linetype = 'HighPSU') ) +
geom_line(aes(doy, GOTM_null, colour = 'GOTM', linetype = 'Null')) +
geom_line(aes(doy, GOTM_HighPSU, colour = 'GOTM', linetype = 'HighPSU') ) +
geom_line(aes(doy, Simstrat_null, colour = 'Simstrat', linetype = 'Null')) +
geom_line(aes(doy, Simstrat_HighPSU, colour = 'Simstrat', linetype = 'HighPSU') ) +
labs(y = "Density difference 20-2 m (kg/m3)") +
facet_wrap(~ year) +
ylim(-1,1)+
theme_light(); g
ggsave('output/Simstrat_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Load LakeEnsemblR
library(LakeEnsemblR)
# Load libraries for post-processing
library(lubridate)
library(gotmtools)
library(ggplot2)
library(ggpubr)
bathy <- read.csv('1_null/LakeEnsemblR_bathymetry_standard.csv')
colnames(bathy) <- c("depths", "areas")
ncdf_null <- '1_null/output/ensemble_output.nc'
out_null <- load_var(ncdf = ncdf_null, var = "temp")
density_null <- load_var(ncdf = ncdf_null, var = "dens")
ts.sch <- lapply(out_null, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_null <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_null)[4] <- "model"
ncdf_10 <- '5_constantsalt+10/output/ensemble_output.nc'
out_10 <- load_var(ncdf = ncdf_10, var = "temp")
density_10 <- load_var(ncdf = ncdf_10, var = "dens")
ts.sch <- lapply(out_10, function(x) {
ts.schmidt.stability(x, bathy = bathy, na.rm = TRUE)
})
## Reshape to data.frame
df_10 <- reshape2::melt(ts.sch, id.vars = 1)
colnames(df_10)[4] <- "model"
df = data.frame('time' = df_null$datetime, 'doy' = yday(df_null$datetime), 'year' = year(df_null$datetime), 'month' = month(df_null$datetime),
'GLM_null' = subset(df_null, model == 'GLM')$value, 'GLM_HighPSU' = subset(df_10, model == 'GLM')$value,
'GOTM_null' = subset(df_null, model == 'GOTM')$value, 'GOTM_HighPSU' = subset(df_10, model == 'GOTM')$value,
'Simstrat_null' = subset(df_null, model == 'Simstrat')$value, 'Simstrat_HighPSU' = subset(df_10, model == 'Simstrat')$value)
## plot results
g <- ggplot(df) +
geom_line(aes(doy, GLM_null, colour = 'null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GLM') +
theme_light(); g
ggsave('output/GLM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, GOTM_null, colour = 'null')) +
geom_line(aes(doy, GOTM_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('GOTM') +
theme_light(); g
ggsave('output/GOTM_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
g <- ggplot(df) +
geom_line(aes(doy, Simstrat_null, colour = 'null')) +
geom_line(aes(doy, Simstrat_HighPSU, colour = 'HighPSU')) +
labs(y = "Schmidt stability (J/m2)") +
facet_wrap(~ year) +
ylim(-20,300) + ggtitle('Simstrat') +
theme_light(); g
ggsave('output/Simstrat_schmidt.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
df_dens = data.frame('time' = density_null$GLM$datetime, 'doy' = yday(density_null$GLM$datetime), 'year' = year(density_null$GLM$datetime), 'month' = month(density_null$GLM$datetime),
'GLM_null' = density_null$GLM$wtr_20 - density_null$GLM$wtr_2, 'GLM_HighPSU' = density_10$GLM$wtr_20 - density_10$GLM$wtr_2,
'GOTM_null' = density_null$GOTM$wtr_20 - density_null$GOTM$wtr_2, 'GOTM_HighPSU' = density_10$GOTM$wtr_20 - density_10$GOTM$wtr_2,
'Simstrat_null' = density_null$Simstrat$wtr_20 - density_null$Simstrat$wtr_2, 'Simstrat_HighPSU' = density_10$Simstrat$wtr_20 - density_10$Simstrat$wtr_2)
g <- ggplot(df_dens) +
geom_line(aes(doy, GLM_null, colour = 'GLM', linetype = 'Null')) +
geom_line(aes(doy, GLM_HighPSU, colour = 'GLM', linetype = 'HighPSU') ) +
geom_line(aes(doy, GOTM_null, colour = 'GOTM', linetype = 'Null')) +
geom_line(aes(doy, GOTM_HighPSU, colour = 'GOTM', linetype = 'HighPSU') ) +
geom_line(aes(doy, Simstrat_null, colour = 'Simstrat', linetype = 'Null')) +
geom_line(aes(doy, Simstrat_HighPSU, colour = 'Simstrat', linetype = 'HighPSU') ) +
labs(y = "Density difference 20-2 m (kg/m3)") +
facet_wrap(~ year) +
ylim(-1,5)+
theme_light(); g
ggsave('output/DensityDifferences.png', g,  dpi = 300,width = 384,height = 384, units = 'mm')
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Set config file & models
config_file <- 'LakeEnsemblR.yaml'
model <- c("GLM", "GOTM", "Simstrat")
# Extract names of all the variables in netCDF
ncdf <- 'output/ensemble_output.nc'
vars <- gotmtools::list_vars(ncdf)
vars # Print variables
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 15)
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 15),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
p1 <- plot_heatmap(ncdf, var = 'salt')
p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 15),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Save as a png file
ggsave('output/ensemble_salt.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
p1 <- plot_heatmap(ncdf, var = 'salt')
library(LakeMetabolizer)
p1 <- plot_heatmap(ncdf, var = 'salt')
p1
# Load libraries for post-processing
library(gotmtools)
library(ggplot2)
library(ggpubr)
p1 <- plot_heatmap(ncdf, var = 'salt')
p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 15),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Save as a png file
ggsave('output/ensemble_salt.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
?plot_heatmap
# Load LakeEnsemblR
library(LakeEnsemblR)
library(lubridate)
p1 <- plot_heatmap(ncdf, var = 'salt')
p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 15),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Save as a png file
ggsave('output/ensemble_salt.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 6),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Save as a png file
ggsave('output/ensemble_salt.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
# Save as a png file
ggsave('output/ensemble_dens.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
p1 <- plot_heatmap(ncdf, var = 'dens')
p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Save as a png file
ggsave('output/ensemble_dens.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
p1 <- plot_heatmap(ncdf, var = 'salt')
p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 6),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Save as a png file
ggsave('output/ensemble_salt.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
p1 <- plot_heatmap(ncdf, var = 'salt')
p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 15),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Save as a png file
ggsave('output/ensemble_salt.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
p1 <- plot_heatmap(ncdf, var = 'salt')
p1
# Change the theme and increase text size for saving
p1 <- p1 +
theme_classic(base_size = 24) +
scale_colour_gradientn(limits = c(0, 10),
colours = rev(RColorBrewer::brewer.pal(11, "Spectral"))); p1
# Save as a png file
ggsave('output/ensemble_salt.png', p1,  dpi = 300,width = 384,height = 280, units = 'mm')
# Load LakeEnsemblR
library(LakeEnsemblR)
out <- load_var(ncdf = "output/ensemble_output.nc", var = "temp")
out
vars <- gotmtools::list_vars(ncdf)
vars # Print variables
out$
out$GLM$wtr_2
mean(out$GLM$wtr_2,out$GOTM$wtr_2,out$Simstrat$wtr_2)
out$GOTM$wtr_2
out$Simstrat$wtr_2
mean(c(2,3,4))
mean(out$GLM$wtr_2,out$GOTM$wtr_2,out$Simstrat$wtr_2)
out$Simstrat$wtr_2
out$GOTM$wtr_2
out$GLM$wtr_2
mean(out$GLM$wtr_2,out$GOTM$wtr_2)
mean(c(out$GLM$wtr_2,out$GOTM$wtr_2,out$Simstrat$wtr_2))
mean(c(out$GLM$wtr_2,out$GOTM$wtr_2,out$Simstrat$wtr_2), na.rm = T)
df = data.frame('datetime' = out$GLM$datetime,
'GLM' = out$GLM$wtr_2,
'GOTM' = out$GOTM$wtr_2,
'Simstrat' = out$Simstrat$wtr_2)
m.df = reshape2::melt(df, id = datetime)
m.df = reshape2::melt(df, id = 'datetime')
m.df
m.df %>%
group_by(datetime) %>%
summarise(wtr = mean(value, na.rm = T))
m.df %>%
group_by(datetime) %>%
summarize(wtr = mean(value, na.rm = T))
m.df %>%
dplyr::group_by(datetime) %>%
dplyr::summarise(wtr = mean(value, na.rm = T))
plot(m.df)
wtr.df = m.df %>%
dplyr::group_by(datetime) %>%
dplyr::summarise(wtr = mean(value, na.rm = T))
plot(wtr.df)
flow = read.csv('../../../monona/1_calibration/Mendota_outflow_30year.csv')
head(flow)
min(wtr.df$datetime)
flow = flow %>%
dplyr::filter(time >= min(wtr.df$datetime) & time <= max(wtr.df$datetime))
flow
head(wtr.df)
df = data.frame('datetime' = wtr.df$datetime,
'Flow_metersCubedPerSecond' = flow$FLOW,
'Water_Temperature_celsius' = wtr.df$wtr,
'Salinity_practicalSalinityUnits' = rep(0, nrow(wtr.df)))
flow
str(flow)
head(flow)
tail(flow)
max(wtr.df$datetime)
tail( read.csv('../../../monona/1_calibration/Mendota_outflow_30year.csv'))
flow = read.csv('../../../monona/1_calibration/Mendota_outflow_30year.csv')
flow = flow %>%
dplyr::filter(time >= min(wtr.df$datetime) )
tail(flow)
df = data.frame('datetime' = wtr.df$datetime,
'Flow_metersCubedPerSecond' = flow$FLOW,
'Water_Temperature_celsius' = wtr.df$wtr,
'Salinity_practicalSalinityUnits' = rep(0, nrow(wtr.df)))
df = data.frame('datetime' = wtr.df$datetime,
'Flow_metersCubedPerSecond' = flow$FLOW,
'Water_Temperature_celsius' = wtr.df$wtr,
'Salinity_practicalSalinityUnits' = rep(0, nrow(wtr.df)))
head(df)
write.csv(df, file = '../../../monona/1_calibration/LakeEnsemblR_inflow_standard.csv',quote = F,row.names = F)
